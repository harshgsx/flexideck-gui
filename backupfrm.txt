import gi
import socketio
import time
from gi.repository import Gtk,Pango,GObject
import threading
import datetime
import time

gi.require_version("Gtk", "3.0")
gi.require_version('Notify', '0.7')

from gi.repository import Gtk
from gi.repository import Notify

# standard Python
sio = socketio.Client()

@sio.event
def connect():
    print("I'm connected!")
    sio.emit('login', {'userKey': 'streaming_api_key'})

@sio.event
def connect_error():
    print("The connection failed!")

@sio.event
def message(data):
    print('I received a message!')

@sio.on('handshake')
def on_message(data):
    print('HandShake', data)


@sio.on('price')
def on_message(data):
    print('Price Data ', data)

    
class MyWindow(Gtk.Window):

    def __init__(self):
        self.timer = None
        self.event = None
        self.clock = '00:00:00'
        Gtk.Window.__init__(self, title="Hello World")
        Gtk.Window.set_default_size(self, 640, 480)
        Notify.init("Welcome to Flexideck")

        self.box = Gtk.Box(spacing=6)
        self.add(self.box)
       
        # self.button = Gtk.Button(label="Mute")
        # self.button.set_halign(Gtk.Align.CENTER)
        # self.button.set_valign(Gtk.Align.CENTER)
        # self.button.connect("clicked", self.on_button_clicked)
        # self.box.pack_start(self.button, True, True, 0)
        
        self.button_start = Gtk.Button(label="Start")
        self.button_start.connect("clicked",self.start_timer)
 
        self.button_stop = Gtk.Button(label="Stop")
        self.button_stop.connect("clicked",self.stop_timer)
 
        self.status = Gtk.Label()
        self.status.set_text(self.clock)
        # override_font is deprecated but good enough for a preview.
        font = Pango.FontDescription("Tahoma 48")
        self.status.override_font(font)
 
        self.vbox = Gtk.VBox()
 
        self.vbox.pack_start(self.button_start,False,False,5)
        self.vbox.pack_start(self.button_stop,False,False,5)
        self.vbox.pack_end(self.status,True,True,5)
 
        self.add(self.vbox)

    def on_button_clicked(self, widget):        
        n = Notify.Notification.new("Simple GTK3 Application", "Hello World !!")
        sio.emit('pyevent', "Mute-Pressed")
        n.show()
    
    def get_time(self):
        seconds = 0
        while not self.event.is_set():
            seconds += 1
            self.clock = str(datetime.timedelta(seconds = seconds))
            self.status.set_text(self.clock)
            time.sleep(1)
 
    def start_timer(self,button):
        print('start')
        self.timer = threading.Thread(target=self.get_time)
        self.event = threading.Event()
        self.timer.daemon=True
        self.timer.start() 
 
    def stop_timer(self,button):
        print('stop')
        self.event.set()
        self.timer = None

sio.connect('http://localhost:3000')
win = MyWindow()
win.connect("destroy", Gtk.main_quit)
win.show_all()
Gtk.main()